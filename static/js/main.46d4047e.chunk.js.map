{"version":3,"sources":["components/navbar.jsx","components/addNewHabit.jsx","components/habit.jsx","components/habits.jsx","components/resetBtn.jsx","app.jsx","index.js"],"names":["Navbar","className","class","this","props","habits","filter","habit","count","length","Component","AddNewHabit","addHabitRef","React","createRef","onSubmit","event","preventDefault","name","current","value","onAdd","ref","type","placeholder","Habit","componentDidMount","console","log","componentWillUnmount","handlePlus","onPlus","handleMinus","onMinus","handleTrash","onTrash","onClick","PureComponent","Habits","map","num","id","ResetBtn","onReset","App","state","item","setState","newHabits","handleAdd","Date","now","handleReset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46d4047e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div className='navbar'>\r\n                <span className=\"navbar-name\">\r\n                    Habit-tracker\r\n                    <i class=\"fas fa-leaf\"></i>\r\n                </span>\r\n                <span className=\"navbar-count\">{(this.props.habits.filter(habit => habit.count !== 0)).length}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\n\r\nclass AddNewHabit extends Component {\r\n    addHabitRef = React.createRef();\r\n    \r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        const name = this.addHabitRef.current.value;\r\n        if(name !== false){\r\n            this.props.onAdd(name);\r\n        }\r\n        this.addHabitRef.current.value = '';\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"addHabit\" onSubmit={this.onSubmit}>\r\n                <input\r\n                    ref={this.addHabitRef}\r\n                    type=\"text\" \r\n                    className=\"addHabitInput\"\r\n                    placeholder=\"New Habit\" \r\n                />\r\n                <button className=\"addHabitBtn\">Add!!</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddNewHabit;","import React, { PureComponent } from 'react';\r\n\r\nclass Habit extends PureComponent {\r\n    // Life Cycle Method\r\n    componentDidMount = () => {\r\n        console.log(`habit: ${this.props.habit.name} Mounted`);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        console.log(`habit: ${this.props.habit.name} Unmounted`);\r\n    };\r\n\r\n    handlePlus = () => {\r\n        this.props.onPlus(this.props.habit);\r\n    };\r\n\r\n    handleMinus = () => {\r\n        this.props.onMinus(this.props.habit);\r\n    };\r\n\r\n    handleTrash = () => {\r\n        this.props.onTrash(this.props.habit);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='habit-box'>\r\n                <span className=\"habit-name\">{this.props.habit.name}</span>\r\n                <span className=\"habit-count\">{this.props.habit.count}</span>\r\n                <button className=\"btn-habit btn-plus\" onClick={this.handlePlus}>\r\n                    <i class=\"fas fa-plus-square\"></i>\r\n                </button>\r\n                <button className=\"btn-habit btn-minus\" onClick={this.handleMinus}>\r\n                    <i class=\"fas fa-minus-square\"></i>\r\n                </button>\r\n                <button className=\"btn-habit btn-trash\" onClick={this.handleTrash}>\r\n                    <i class=\"fas fa-trash\"></i>\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Habit;","import React, { Component } from 'react';\r\nimport Habit from './habit';\r\n\r\nclass Habits extends Component {\r\n    handlePlus = (habit) => {\r\n        this.props.onPlus(habit);\r\n    };\r\n\r\n    handleMinus = (habit) => {\r\n        this.props.onMinus(habit);\r\n    };\r\n\r\n    handleTrash = (habit) => {\r\n        this.props.onTrash(habit);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.habits.map(habit => (\r\n                    <Habit\r\n                        num={habit.id}\r\n                        habit={habit}\r\n                        onPlus={this.handlePlus}\r\n                        onMinus={this.handleMinus}\r\n                        onTrash={this.handleTrash}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Habits;","import React, { PureComponent } from 'react';\r\n\r\nclass ResetBtn extends PureComponent {\r\n    render() {\r\n        return (\r\n            <button className=\"btnReset\" onClick={this.props.onReset}>\r\n                Reset\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResetBtn;","import './app.css';\nimport React, { Component } from 'react';\nimport Navbar from './components/navbar';\nimport AddNewHabit from './components/addNewHabit';\nimport Habits from './components/habits';\nimport ResetBtn from './components/resetBtn';\n\nclass App extends Component {\n  state = {\n    habits:[\n        {id: 1, name: 'Reading', count: 0},\n        {id: 2, name: 'Running', count: 0},\n        {id: 3, name: 'Coding', count: 0}\n// Purecomponent는 내부 id, name, count 전부다 하나의 오브젝트이다\n// 이러한 오브젝트들만 비교해서 같으면 render함수 호출 안함\n// 그래서 id, name, count 내부 자료가 변화하더라도 Purecomponent에서는\n// render함수가 호출 안됨. 왜??\n// id, name, count 어쨌든 아이디가 동일한 오브젝트이니깐..\n// (shallow comparison)\n    ]\n  };\n\n  handlePlus = (habit) => {\n      // console.log(`plus${habit}`);\n      // const habits = [...this.state.habits];\n      // const index = habits.indexOf(habit);\n      // habits[index].count++;\n      // this.setState({habits});\n\n// this.state.count++; state 원본 데이터를 이렇게 직접적으로 변환하는거\n// 안 좋음. 그래서!!! spread operator []를 쓰는 거임. 겉만 새거인 새로운\n// 배열.. 안의 원본 오브젝트 값은 참조값만 복사해서 가져와서 새로운 배열 만듬\n\n\n      const habits = this.state.habits.map(item => {\n        if(item.id === habit.id){\n          return {...habit, count: habit.count + 1};\n// Spread Operator를 이용해서 array에 있는 모든 아이템들을 새로운 배열로 \n// 가지고 와서 새로운 배열을 만들게 됨. \n// 그래서 완전히 새로운 배열 오브젝트를 가리키게 됨\n// 하지만!! 이 Spread Operator는 배열 안의 모든 오브젝트 내용들을 \n// 일일이 복사해서 새로운 것을 만드는 것이 아니라, \n// 오브젝트는 그대로 두고 array 배열을 빙글 빙글 돌면서 \n// 각각의 아이템들의 참조값을 복사 하게 됨.\n// 즉 array3배열안에는 array안에 들어 있는 동일한 오브젝트들이 \n// 들어 있다. 다만 배열 오브젝트 자체만!! 새롭게 만들어짐.\n\n// 참조값 복사한 원본 배열에서 오브젝트를 추가해주더라도\n// (원 배열에서 참조값만 복사하고 새로운 배열 껍데기만 만든) \n// 새로운 배열에서는 변화가 없음. why? 새로운 배열이기 때문에..\n// 그래서 배열 자체는 새로운 배열이기 때문에 아이템을 추가하거나 삭제하면\n// 배열 내용은 달라질 수 있음.\n        }\n        return item;\n      });\n      this.setState({habits});\n  };\n\n  handleMinus = (habit) => {\n      // console.log(`minus${habit}`);\n      // const habits = [...this.state.habits];\n      // const index = habits.indexOf(habit);\n      // habits[index].count--;\n      // if(habits[index].count < 0){\n      //   habits[index].count = 0;\n      //   this.setState({habits});\n      // }else{\n      //   this.setState({habits});\n      // }\n\n      const habits = this.state.habits.map(item => {\n        if(item.id === habit.id){\n          const count = habit.count - 1;\n          return {...habit, count: count < 0 ? 0 : count};\n        }\n        return item;\n      });\n      this.setState({habits});\n  };\n\n  handleTrash = (habit) => {\n      console.log(`trash${habit}`);\n      const newHabits = this.state.habits.filter(value => value.id !== habit.id);\n      this.setState({habits: newHabits});\n  };\n\n  handleAdd = (name) => {\n    const habits = [...this.state.habits, {id: Date.now(), name: name, count: 0}];\n    this.setState({habits});\n  };\n\n  handleReset = () => {\n    // const habits = [...this.state.habits];\n    // habits.map(habit => habit.count = 0);\n    // this.setState({habits});\n\n    const habits = this.state.habits.map(habit => {\n      if(habit.count !== 0){\n        return {...habit, count: 0};\n      }\n      return habit;\n    });\n    this.setState({habits});\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar habits={this.state.habits}/>\n        <AddNewHabit habits={this.state.habits} onAdd={this.handleAdd}/>\n        <Habits \n          habits={this.state.habits}\n          onPlus={this.handlePlus}\n          onMinus={this.handleMinus}\n          onTrash={this.handleTrash}\n          // 보라색 이름 : properties 이름으로 오브젝트 전달.\n          // 함수의 이름을 인자로 전달하면 함수를 가르키는 참조값을 전달\n          // 참조값만 onPlus, onMinus, OnTrash, habits 라는 이름으로 prop으로써 전달! \n        />\n        <ResetBtn onReset={this.handleReset}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport SimpleHabit from './components/simpleHabit';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    {/* <SimpleHabit /> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}